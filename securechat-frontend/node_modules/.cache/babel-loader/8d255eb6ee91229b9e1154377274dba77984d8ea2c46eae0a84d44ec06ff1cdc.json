{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Downloads\\\\SecureChatApp2-main\\\\SecureChatApp2-main\\\\securechat-frontend\\\\src\\\\components\\\\Chat\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nimport JSEncrypt from 'jsencrypt';\nimport '../css/chatwindow.css';\nimport { FaShieldAlt, FaSignOutAlt, FaUserCircle, FaKey, FaLock, FaUnlockAlt, FaComments, FaUser, FaPaperPlane, FaCheckCircle, FaExclamationTriangle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatApp() {\n  _s();\n  var _onlineUsers$find;\n  const [socket, setSocket] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [userKeys, setUserKeys] = useState(new Map());\n  const [currentChat, setCurrentChat] = useState(null);\n  const [myKeys, setMyKeys] = useState({\n    privateKey: null,\n    publicKey: null\n  });\n  const [currentUserData, setCurrentUserData] = useState({\n    email: '',\n    username: ''\n  });\n  const [messages, setMessages] = useState([]); // messages for current chat\n  const messageInputRef = useRef(null);\n\n  // Load token & user info from localStorage\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    const email = localStorage.getItem('userEmail');\n    const username = localStorage.getItem('username');\n    if (!token || !email) {\n      window.location.href = '/';\n      return;\n    }\n    setCurrentUserData({\n      email,\n      username: username || email.split('@')[0]\n    });\n\n    // Initialize socket\n    const socketClient = io({\n      auth: {\n        token\n      }\n    });\n    setSocket(socketClient);\n\n    // Cleanup socket on unmount\n    return () => {\n      socketClient.disconnect();\n    };\n  }, []);\n\n  // Setup socket events & key generation\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('connect', () => {\n      setConnectionStatus('Connected');\n      generateKeyPair();\n      socket.emit('get-online-users');\n    });\n    socket.on('disconnect', () => {\n      setConnectionStatus('Disconnected');\n    });\n    socket.on('online-users', users => {\n      setOnlineUsers(users);\n    });\n    socket.on('user-key-available', data => {\n      setUserKeys(prev => new Map(prev).set(data.userId, data));\n      socket.emit('get-online-users');\n    });\n    socket.on('receive-public-key', data => {\n      setUserKeys(prev => new Map(prev).set(data.userId, data));\n    });\n    socket.on('receive-message', data => {\n      decryptAndDisplayMessage(data);\n    });\n    socket.on('error', error => {\n      console.error('Socket error:', error);\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket]);\n\n  // Generate RSA key pair\n  function generateKeyPair() {\n    const crypt = new JSEncrypt({\n      default_key_size: 1024\n    });\n    const privateKey = crypt.getPrivateKey();\n    const publicKey = crypt.getPublicKey();\n    setMyKeys({\n      privateKey,\n      publicKey\n    });\n    socket.emit('upload-public-key', {\n      publicKey,\n      keyType: 'RSA'\n    });\n  }\n\n  // Select user to chat with\n  function selectUser(userId, username) {\n    setCurrentChat(userId);\n    setMessages([]);\n\n    // Request key if missing\n    if (!userKeys.has(userId)) {\n      socket.emit('request-public-key', userId);\n    }\n  }\n\n  // Send message handler\n  function sendMessage() {\n    if (!currentChat) return;\n    const message = messageInputRef.current.value.trim();\n    if (!message) return;\n    const userKey = userKeys.get(currentChat);\n    if (!userKey) {\n      alert(\"Recipient's public key not available\");\n      return;\n    }\n\n    // AES key for encrypting message\n    const aesKey = CryptoJS.lib.WordArray.random(256 / 8).toString();\n    const encryptedMessage = CryptoJS.AES.encrypt(message, aesKey).toString();\n\n    // Encrypt AES key with recipient's public key\n    const rsaEncrypt = new JSEncrypt();\n    rsaEncrypt.setPublicKey(userKey.publicKey);\n    const encryptedAESKey = rsaEncrypt.encrypt(aesKey);\n    const timestamp = new Date().toISOString();\n    const nonce = CryptoJS.lib.WordArray.random(128 / 8).toString();\n\n    // Sign the message\n    const rsaSign = new JSEncrypt();\n    rsaSign.setPrivateKey(myKeys.privateKey);\n    const signature = rsaSign.sign(message + timestamp + nonce, CryptoJS.SHA256, \"sha256\");\n    socket.emit('send-message', {\n      encryptedMessage,\n      encryptedAESKey,\n      timestamp,\n      nonce,\n      signature,\n      targetUserId: currentChat\n    });\n\n    // Show sent message immediately\n    const newMsg = {\n      from: currentUserData.email,\n      fromUsername: currentUserData.username,\n      message,\n      timestamp,\n      verified: true,\n      sent: true\n    };\n    setMessages(msgs => [...msgs, newMsg]);\n    messageInputRef.current.value = '';\n  }\n\n  // Decrypt incoming message and display\n  function decryptAndDisplayMessage(data) {\n    try {\n      const rsaDecrypt = new JSEncrypt();\n      rsaDecrypt.setPrivateKey(myKeys.privateKey);\n      const aesKey = rsaDecrypt.decrypt(data.encryptedAESKey);\n      if (!aesKey) return;\n      const decryptedBytes = CryptoJS.AES.decrypt(data.encryptedMessage, aesKey);\n      const message = decryptedBytes.toString(CryptoJS.enc.Utf8);\n      if (!message) return;\n\n      // Verify signature\n      let verified = false;\n      if (data.signature) {\n        const senderKey = userKeys.get(data.from);\n        if (senderKey) {\n          const rsaVerify = new JSEncrypt();\n          rsaVerify.setPublicKey(senderKey.publicKey);\n          verified = rsaVerify.verify(message + data.timestamp + data.nonce, data.signature, CryptoJS.SHA256);\n        }\n      }\n\n      // Timestamp replay check\n      const msgTime = new Date(data.timestamp).getTime();\n      if (Math.abs(Date.now() - msgTime) > 300000) {\n        console.warn('Message timestamp suspicious');\n        return;\n      }\n      if (data.from === currentChat) {\n        const newMsg = {\n          from: data.from,\n          fromUsername: data.fromUsername || data.from,\n          message,\n          timestamp: data.timestamp,\n          verified,\n          sent: false\n        };\n        setMessages(msgs => [...msgs, newMsg]);\n      }\n    } catch (err) {\n      console.error('Error decrypting message:', err);\n    }\n  }\n\n  // Logout handler\n  function logout() {\n    const token = localStorage.getItem('authToken');\n    fetch('/api/logout', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).finally(() => {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userEmail');\n      localStorage.removeItem('username');\n      window.location.href = '/';\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    style: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(FaShieldAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), \" SecureChat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${connectionStatus === 'Connected' ? 'status-online' : 'status-offline'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-dot ${connectionStatus === 'Connected' ? 'status-online' : 'status-offline'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: connectionStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 37\n          }, this), \" Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logged-user\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-avatar\",\n              children: /*#__PURE__*/_jsxDEV(FaUserCircle, {\n                size: 36\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"username\",\n                children: currentUserData.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-email\",\n                children: currentUserData.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"online-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Online Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"encryption-status\",\n            children: [/*#__PURE__*/_jsxDEV(FaKey, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), \" \", myKeys.publicKey ? 'Keys ready - Secure communication enabled' : 'Generating keys...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list\",\n          children: [onlineUsers.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'gray'\n            },\n            children: \"No users online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 42\n          }, this), onlineUsers.map(user => {\n            const hasKey = user.hasPublicKey || userKeys.has(user.userId);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `user-item ${currentChat === user.userId ? 'active' : ''}`,\n              onClick: () => selectUser(user.userId, user.username),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-name\",\n                  children: user.username || user.userId.split('@')[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-status\",\n                  children: \"Online\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `key-status ${hasKey ? 'key-available' : 'key-missing'}`,\n                children: [hasKey ? /*#__PURE__*/_jsxDEV(FaLock, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(FaUnlockAlt, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 44\n                }, this), hasKey ? 'Link with the connection' : 'No Key']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)]\n            }, user.userId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chat-container\",\n        children: !currentChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chatArea\",\n          className: \"no-chat\",\n          children: [/*#__PURE__*/_jsxDEV(FaComments, {\n            size: 48,\n            style: {\n              marginBottom: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Select a user to start chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(FaUser, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), \" \", ((_onlineUsers$find = onlineUsers.find(u => u.userId === currentChat)) === null || _onlineUsers$find === void 0 ? void 0 : _onlineUsers$find.username) || currentChat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `chat-encryption-status ${userKeys.has(currentChat) ? 'encrypted' : 'waiting'}`,\n              style: {\n                color: userKeys.has(currentChat) ? 'limegreen' : 'orange',\n                fontWeight: 'bold'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FaShieldAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this), \" \", userKeys.has(currentChat) ? 'End-to-end encrypted' : 'Waiting for encryption keys...']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages\",\n            id: \"messages\",\n            children: messages.map((msg, idx) => {\n              const time = new Date(msg.timestamp).toLocaleTimeString();\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message ${msg.sent ? 'message-sent' : 'message-received'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-bubble\",\n                  style: {\n                    padding: '8px'\n                  },\n                  children: msg.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-time\",\n                  style: {\n                    fontSize: '0.75rem',\n                    opacity: 0.7\n                  },\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-status\",\n                  style: {\n                    fontSize: '0.75rem',\n                    opacity: 0.7,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 5\n                  },\n                  children: [msg.verified ? /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n                    color: \"limegreen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 41\n                  }, this) : /*#__PURE__*/_jsxDEV(FaExclamationTriangle, {\n                    color: \"tomato\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 79\n                  }, this), msg.verified ? 'Verified' : 'Unverified']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"messageInput\",\n              placeholder: \"Type your message...\",\n              disabled: !userKeys.has(currentChat),\n              ref: messageInputRef,\n              onKeyPress: e => {\n                if (e.key === 'Enter') sendMessage();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-send\",\n              onClick: sendMessage,\n              disabled: !userKeys.has(currentChat),\n              children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"bPcidoUkFKx2HGNroidEf3j0t50=\");\n_c = ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","CryptoJS","JSEncrypt","FaShieldAlt","FaSignOutAlt","FaUserCircle","FaKey","FaLock","FaUnlockAlt","FaComments","FaUser","FaPaperPlane","FaCheckCircle","FaExclamationTriangle","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatApp","_s","_onlineUsers$find","socket","setSocket","connectionStatus","setConnectionStatus","onlineUsers","setOnlineUsers","userKeys","setUserKeys","Map","currentChat","setCurrentChat","myKeys","setMyKeys","privateKey","publicKey","currentUserData","setCurrentUserData","email","username","messages","setMessages","messageInputRef","token","localStorage","getItem","window","location","href","split","socketClient","auth","disconnect","on","generateKeyPair","emit","users","data","prev","set","userId","decryptAndDisplayMessage","error","console","crypt","default_key_size","getPrivateKey","getPublicKey","keyType","selectUser","has","sendMessage","message","current","value","trim","userKey","get","alert","aesKey","lib","WordArray","random","toString","encryptedMessage","AES","encrypt","rsaEncrypt","setPublicKey","encryptedAESKey","timestamp","Date","toISOString","nonce","rsaSign","setPrivateKey","signature","sign","SHA256","targetUserId","newMsg","from","fromUsername","verified","sent","msgs","rsaDecrypt","decrypt","decryptedBytes","enc","Utf8","senderKey","rsaVerify","verify","msgTime","getTime","Math","abs","now","warn","err","logout","fetch","method","headers","finally","removeItem","className","style","height","display","flexDirection","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","length","color","map","user","hasKey","hasPublicKey","id","marginBottom","find","u","fontWeight","msg","idx","time","toLocaleTimeString","padding","fontSize","opacity","alignItems","gap","type","placeholder","disabled","ref","onKeyPress","e","key","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Downloads/SecureChatApp2-main/SecureChatApp2-main/securechat-frontend/src/components/Chat/ChatWindow.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nimport JSEncrypt from 'jsencrypt';\nimport '../css/chatwindow.css'; \n\nimport { FaShieldAlt, FaSignOutAlt, FaUserCircle, FaKey, FaLock, FaUnlockAlt, FaComments, FaUser, FaPaperPlane, FaCheckCircle, FaExclamationTriangle } from 'react-icons/fa';\n\nexport default function ChatApp() {\n  const [socket, setSocket] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('Connecting...');\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [userKeys, setUserKeys] = useState(new Map());\n  const [currentChat, setCurrentChat] = useState(null);\n  const [myKeys, setMyKeys] = useState({ privateKey: null, publicKey: null });\n  const [currentUserData, setCurrentUserData] = useState({ email: '', username: '' });\n  const [messages, setMessages] = useState([]); // messages for current chat\n  const messageInputRef = useRef(null);\n\n  // Load token & user info from localStorage\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    const email = localStorage.getItem('userEmail');\n    const username = localStorage.getItem('username');\n\n    if (!token || !email) {\n      window.location.href = '/';\n      return;\n    }\n\n    setCurrentUserData({\n      email,\n      username: username || email.split('@')[0]\n    });\n\n    // Initialize socket\n    const socketClient = io({\n      auth: { token }\n    });\n\n    setSocket(socketClient);\n\n    // Cleanup socket on unmount\n    return () => {\n      socketClient.disconnect();\n    };\n  }, []);\n\n  // Setup socket events & key generation\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.on('connect', () => {\n      setConnectionStatus('Connected');\n      generateKeyPair();\n      socket.emit('get-online-users');\n    });\n\n    socket.on('disconnect', () => {\n      setConnectionStatus('Disconnected');\n    });\n\n    socket.on('online-users', (users) => {\n      setOnlineUsers(users);\n    });\n\n    socket.on('user-key-available', (data) => {\n      setUserKeys(prev => new Map(prev).set(data.userId, data));\n      socket.emit('get-online-users');\n    });\n\n    socket.on('receive-public-key', (data) => {\n      setUserKeys(prev => new Map(prev).set(data.userId, data));\n    });\n\n    socket.on('receive-message', (data) => {\n      decryptAndDisplayMessage(data);\n    });\n\n    socket.on('error', (error) => {\n      console.error('Socket error:', error);\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket]);\n\n  // Generate RSA key pair\n  function generateKeyPair() {\n    const crypt = new JSEncrypt({ default_key_size: 1024 });\n    const privateKey = crypt.getPrivateKey();\n    const publicKey = crypt.getPublicKey();\n    setMyKeys({ privateKey, publicKey });\n\n    socket.emit('upload-public-key', {\n      publicKey,\n      keyType: 'RSA'\n    });\n  }\n\n  // Select user to chat with\n  function selectUser(userId, username) {\n    setCurrentChat(userId);\n    setMessages([]);\n\n    // Request key if missing\n    if (!userKeys.has(userId)) {\n      socket.emit('request-public-key', userId);\n    }\n  }\n\n  // Send message handler\n  function sendMessage() {\n    if (!currentChat) return;\n    const message = messageInputRef.current.value.trim();\n    if (!message) return;\n\n    const userKey = userKeys.get(currentChat);\n    if (!userKey) {\n      alert(\"Recipient's public key not available\");\n      return;\n    }\n\n    // AES key for encrypting message\n    const aesKey = CryptoJS.lib.WordArray.random(256 / 8).toString();\n\n    const encryptedMessage = CryptoJS.AES.encrypt(message, aesKey).toString();\n\n    // Encrypt AES key with recipient's public key\n    const rsaEncrypt = new JSEncrypt();\n    rsaEncrypt.setPublicKey(userKey.publicKey);\n    const encryptedAESKey = rsaEncrypt.encrypt(aesKey);\n\n    const timestamp = new Date().toISOString();\n    const nonce = CryptoJS.lib.WordArray.random(128 / 8).toString();\n\n    // Sign the message\n    const rsaSign = new JSEncrypt();\n    rsaSign.setPrivateKey(myKeys.privateKey);\n    const signature = rsaSign.sign(message + timestamp + nonce, CryptoJS.SHA256, \"sha256\");\n\n    socket.emit('send-message', {\n      encryptedMessage,\n      encryptedAESKey,\n      timestamp,\n      nonce,\n      signature,\n      targetUserId: currentChat\n    });\n\n    // Show sent message immediately\n    const newMsg = {\n      from: currentUserData.email,\n      fromUsername: currentUserData.username,\n      message,\n      timestamp,\n      verified: true,\n      sent: true\n    };\n    setMessages((msgs) => [...msgs, newMsg]);\n    messageInputRef.current.value = '';\n  }\n\n  // Decrypt incoming message and display\n  function decryptAndDisplayMessage(data) {\n    try {\n      const rsaDecrypt = new JSEncrypt();\n      rsaDecrypt.setPrivateKey(myKeys.privateKey);\n      const aesKey = rsaDecrypt.decrypt(data.encryptedAESKey);\n      if (!aesKey) return;\n\n      const decryptedBytes = CryptoJS.AES.decrypt(data.encryptedMessage, aesKey);\n      const message = decryptedBytes.toString(CryptoJS.enc.Utf8);\n      if (!message) return;\n\n      // Verify signature\n      let verified = false;\n      if (data.signature) {\n        const senderKey = userKeys.get(data.from);\n        if (senderKey) {\n          const rsaVerify = new JSEncrypt();\n          rsaVerify.setPublicKey(senderKey.publicKey);\n          verified = rsaVerify.verify(message + data.timestamp + data.nonce, data.signature, CryptoJS.SHA256);\n        }\n      }\n\n      // Timestamp replay check\n      const msgTime = new Date(data.timestamp).getTime();\n      if (Math.abs(Date.now() - msgTime) > 300000) {\n        console.warn('Message timestamp suspicious');\n        return;\n      }\n\n      if (data.from === currentChat) {\n        const newMsg = {\n          from: data.from,\n          fromUsername: data.fromUsername || data.from,\n          message,\n          timestamp: data.timestamp,\n          verified,\n          sent: false\n        };\n        setMessages((msgs) => [...msgs, newMsg]);\n      }\n    } catch (err) {\n      console.error('Error decrypting message:', err);\n    }\n  }\n\n  // Logout handler\n  function logout() {\n    const token = localStorage.getItem('authToken');\n    fetch('/api/logout', {\n      method: 'POST',\n      headers: { 'Authorization': `Bearer ${token}` }\n    }).finally(() => {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userEmail');\n      localStorage.removeItem('username');\n      window.location.href = '/';\n    });\n  }\n\n  return (\n    <div className=\"chat-app\" style={{ height: '100vh', display: 'flex', flexDirection: 'column' }}>\n      {/* Header */}\n      <header className=\"header\" >\n        <h1><FaShieldAlt /> SecureChat</h1>\n        <div className=\"header-info\" >\n          <div className={`status ${connectionStatus === 'Connected' ? 'status-online' : 'status-offline'}`} >\n            <div\n              className={`status-dot ${connectionStatus === 'Connected' ? 'status-online' : 'status-offline'}`}\n              \n            />\n            <span>{connectionStatus}</span>\n          </div>\n          <button onClick={logout} ><FaSignOutAlt /> Logout</button>\n        </div>\n      </header>\n\n      {/* Main Container */}\n      <div className=\"main-container\" >\n\n        {/* Sidebar */}\n        <aside className=\"sidebar\" >\n          <div className=\"sidebar-header\" >\n            <div className=\"logged-user\" >\n              <div className=\"user-avatar\" ><FaUserCircle size={36} /></div>\n              <div className=\"user-details\" >\n                <div className=\"username\">{currentUserData.username}</div>\n                <div className=\"user-email\">{currentUserData.email}</div>\n              </div>\n              <div className=\"online-indicator\" />\n            </div>\n            <h3>Online Users</h3>\n            <div className=\"encryption-status\" >\n              <FaKey /> {myKeys.publicKey ? 'Keys ready - Secure communication enabled' : 'Generating keys...'}\n            </div>\n          </div>\n\n          <div className=\"users-list\" >\n            {onlineUsers.length === 0 && <div style={{ color: 'gray' }}>No users online</div>}\n            {onlineUsers.map((user) => {\n              const hasKey = user.hasPublicKey || userKeys.has(user.userId);\n              return (\n                <div\n                  key={user.userId}\n                  className={`user-item ${currentChat === user.userId ? 'active' : ''}`}\n                  \n                  onClick={() => selectUser(user.userId, user.username)}\n                >\n                  <div className=\"user-info\" >\n                    <div className=\"user-name\">{user.username || user.userId.split('@')[0]}</div>\n                    <div className=\"user-status\" >Online</div>\n                  </div>\n                  <div\n                    className={`key-status ${hasKey ? 'key-available' : 'key-missing'}`}\n                    \n                  >\n                    {hasKey ? <FaLock /> : <FaUnlockAlt />}\n                    {hasKey ? 'Link with the connection' : 'No Key'}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </aside>\n\n        {/* Chat Container */}\n        <section className=\"chat-container\" >\n          {!currentChat ? (\n            <div\n              id=\"chatArea\"\n              className=\"no-chat\"\n              \n            >\n              <FaComments size={48} style={{ marginBottom: 20 }} />\n              <div>Select a user to start chatting</div>\n            </div>\n          ) : (\n            <>\n              <div className=\"chat-header\" >\n                <h3><FaUser /> {onlineUsers.find(u => u.userId === currentChat)?.username || currentChat}</h3>\n                <div\n                  className={`chat-encryption-status ${userKeys.has(currentChat) ? 'encrypted' : 'waiting'}`}\n                  style={{ color: userKeys.has(currentChat) ? 'limegreen' : 'orange', fontWeight: 'bold' }}\n                >\n                  <FaShieldAlt /> {userKeys.has(currentChat) ? 'End-to-end encrypted' : 'Waiting for encryption keys...'}\n                </div>\n              </div>\n\n              <div className=\"messages\" id=\"messages\" >\n                {messages.map((msg, idx) => {\n                  const time = new Date(msg.timestamp).toLocaleTimeString();\n                  return (\n                    <div\n                      key={idx}\n                      className={`message ${msg.sent ? 'message-sent' : 'message-received'}`}\n                      \n                    >\n                      <div className=\"message-bubble\" style={{ padding: '8px' }}>{msg.message}</div>\n                      <div className=\"message-time\" style={{ fontSize: '0.75rem', opacity: 0.7 }}>{time}</div>\n                      <div className=\"message-status\" style={{ fontSize: '0.75rem', opacity: 0.7, display: 'flex', alignItems: 'center', gap: 5 }}>\n                        {msg.verified ? <FaCheckCircle color=\"limegreen\" /> : <FaExclamationTriangle color=\"tomato\" />}\n                        {msg.verified ? 'Verified' : 'Unverified'}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n\n              <div className=\"message-input\" >\n                <input\n                  type=\"text\"\n                  id=\"messageInput\"\n                  placeholder=\"Type your message...\"\n                  disabled={!userKeys.has(currentChat)}\n                  ref={messageInputRef}\n                  onKeyPress={(e) => { if (e.key === 'Enter') sendMessage(); }}\n                />\n                <button\n                  className=\"btn-send\"\n                  onClick={sendMessage}\n                  disabled={!userKeys.has(currentChat)}\n                 \n                >\n                  <FaPaperPlane />\n                </button>\n              </div>\n            </>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}