{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\"\n});\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport default API;\nexport const fetchUser = async () => {\n  try {\n    const res = await API.get(\"/me\");\n    return res.data.user;\n  } catch (err) {\n    console.error(\"Failed to fetch user:\", err);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","fetchUser","res","get","data","user","err","console","error"],"sources":["C:/Users/ACER/Downloads/SecureChatApp2-main/SecureChatApp2-main/securechat-frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\", \n});\n\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nexport default API;\nexport const fetchUser = async () => {\n  try {\n    const res = await API.get(\"/me\");\n    return res.data.user;\n  } catch (err) {\n    console.error(\"Failed to fetch user:\", err);\n    return null;\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAED,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAC3D,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAeN,GAAG;AAClB,OAAO,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,KAAK,CAAC;IAChC,OAAOD,GAAG,CAACE,IAAI,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC3C,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}